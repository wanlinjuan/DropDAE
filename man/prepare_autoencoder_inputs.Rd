% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_autoencoder_inputs.R
\name{prepare_autoencoder_inputs}
\alias{prepare_autoencoder_inputs}
\title{Prepare Autoencoder Inputs by Simulating Dropout and Normalization}
\usage{
prepare_autoencoder_inputs(
  training_data,
  test_data,
  dropout_mid = 0.5,
  dropout_shape = -1,
  normalization = "sct",
  seed = 1234
)
}
\arguments{
\item{training_data}{A gene-by-cell count matrix used for training.}

\item{test_data}{A gene-by-cell count matrix used for testing.}

\item{dropout_mid}{Midpoint parameter for the dropout function. Default is 0.5.}

\item{dropout_shape}{Shape parameter for the dropout function. Default is -1.}

\item{normalization}{Normalization method to apply. Either \code{"log"} for log normalization or \code{"sct"} for SCTransform. Default is \code{"log"}.}

\item{seed}{Random seed for reproducibility. Default is 1234.}
}
\value{
A list containing four matrices:
\describe{
  \item{data_train_corrupt}{Corrupted (dropout-added) training data.}
  \item{data_test_corrupt}{Corrupted (dropout-added) testing data.}
  \item{data_train_uncorrupt}{Original uncorrupted training data.}
  \item{data_test_uncorrupt}{Original uncorrupted testing data.}
}
}
\description{
This function prepares training and testing datasets for a denoising autoencoder by simulating dropout
and applying normalization methods (log normalization or SCTransform). It creates corrupted and uncorrupted
versions of both training and test data.
}
\examples{
if (requireNamespace("Seurat", quietly = TRUE) && requireNamespace("splatter", quietly = TRUE)) {
  set.seed(123)
  library(Seurat)
  library(splatter)
  params <- newSplatParams(batchCells = 200, nGenes = 100)
  sim <- splatSimulate(params, verbose = FALSE)
  data <- as.matrix(counts(sim))
  result <- prepare_autoencoder_inputs(training_data = data, test_data = data, normalization = "log")
  str(result)
}
}
